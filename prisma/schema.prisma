datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int           @id @default(autoincrement())
  address       String        @unique
  isTncSigned   Boolean?      @default(false)
  message       String?
  tncDocVersion String?       @default("1.0")
  referralCode  String        @unique
  referrals     Referral[]
  referralCount Int?          @default(0)
  Raffles       Raffle[]
  og_nft_users  og_nft_users?
  Signatures    Signatures[]
  LuckyWinner   LuckyWinner[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Raffle {
  raffleId Int @id @default(autoincrement())

  isRaffleParticipant Boolean? @default(false)
  sharedOnX           Boolean? @default(false)
  activeDeposits      Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  User   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  LuckyWinner LuckyWinner[]
}

model LuckyWinner {
  winnerId Int @id @default(autoincrement())
  roundId  Int @default(autoincrement())

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  Raffle   Raffle @relation(fields: [raffleId], references: [raffleId])
  raffleId Int

  User   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Signatures {
  id            Int      @id @default(autoincrement())
  signature     String
  tncDocVersion String
  createdAt     DateTime @default(now())

  userId Int
  User   User @relation(fields: [userId], references: [id])

  @@unique([userId, tncDocVersion], name: "unique_signature")
}

model Referral {
  referralId    Int      @id @default(autoincrement())
  refreeAddress String   @unique
  createdAt     DateTime @default(now())

  User   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, refreeAddress], name: "unique_referral")
}

model og_nft_users {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  User   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
